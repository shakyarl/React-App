{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","localizer","momentLocalizer","moment","React","useState","open","setOpen","handleClose","data","useMemo","col1","col2","col3","col4","col5","col6","col7","columns","Header","accessor","sortType","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","AppBar","Tooltip","title","IconButton","Typography","Button","events","Date","startAccessor","endAccessor","variant","color","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","defaultValue","DialogActions","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","style","borderBottom","background","fontWeight","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","padding","border","name","email","phone","customers","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8eaaa93a.chunk.js","sourcesContent":["import './App.css';\n\nimport Button from '@material-ui/core/Button'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { IconButton, Typography } from '@material-ui/core';\n\nimport React from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from \"moment\";\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { useTable, useSortBy } from 'react-table'\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction App() {\n\n  const localizer = momentLocalizer(moment);\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const data = React.useMemo(\n    () => [\n      {\n        col1: 'BK1',\n        col2: 'Mountain Bike',\n        col3: 'Giant Talon 1',\n        col4: '$650',\n        col5: '$800',\n        col6: 'The Bike Chain',\n        col7: 7,\n      },\n      {\n        col1: 'BK2',\n        col2: 'Mountain Bike',\n        col3: 'Giant Trance',\n        col4: '$1700',\n        col5: '$2500',\n        col6: 'Giant Suppliers',\n        col7: 4,\n      },\n      {\n        col1: 'BK3',\n        col2: 'Mountain Bike',\n        col3: 'Marine Hawk Hill 1',\n        col4: '$1000',\n        col5: '$1400',\n        col6: 'The Bike Chain',\n        col7: 5,\n      },\n      {\n        col1: 'BK4',\n        col2: 'Mountain Bike',\n        col3: 'Trek Fuel EX 9.9',\n        col4: '$4000',\n        col5: '$7900',\n        col6: 'Trek LTD',\n        col7: 2,\n      },\n      {\n        col1: 'RP1',\n        col2: 'Repair parts',\n        col3: 'Front brakes',\n        col4: '$50',\n        col5: '$80',\n        col6: 'Giant Suppliers',\n        col7: 13,\n      },\n      {\n        col1: 'RP2',\n        col2: 'Repair parts',\n        col3: 'Chain',\n        col4: '$25',\n        col5: '$50',\n        col6: 'The Bike Chain',\n        col7: 20,\n      },\n      {\n        col1: 'RP3',\n        col2: 'Repair parts',\n        col3: 'Rear brakes',\n        col4: '$55',\n        col5: '$85',\n        col6: 'The Bike Reps',\n        col7: 10,\n      },\n      {\n        col1: 'RP4',\n        col2: 'Repair parts',\n        col3: 'Shock absorber',\n        col4: '$90',\n        col5: '$140',\n        col6: 'The Bike Reps',\n        col7: 8,\n      },\n    ],\n    []\n  )\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Product ID',\n        accessor: 'col1',\n        sortType: 'alphanumeric',\n      },\n      {\n        Header: 'Product Category',\n        accessor: 'col2',\n        sortType: 'alphanumeric',\n      },\n      {\n        Header: 'Product Name',\n        accessor: 'col3', \n        sortType: 'alphanumeric',\n      },\n      {\n        Header: 'Purchase Cost',\n        accessor: 'col4',\n        sortType: 'alphanumeric',\n      },\n      {\n        Header: 'Selling Price',\n        accessor: 'col5',\n        sortType: 'alphanumeric',\n      },\n      {\n        Header: 'Supplier',\n        accessor: 'col6',\n        sortType: 'alphanumeric',\n      },\n      {\n        Header: 'Quantity on Hand',\n        accessor: 'col7',\n        sortType: 'alphanumeric',\n      },\n    ],\n    []\n  ) \n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data }, useSortBy)\n\n  const customers = [\n      {id : 1, name : 'Pablo Rico', email : 'pablo.rocks@ymail.com', phone : 440200800},\n      {id : 2, name : 'Michael Johnson', email : 'mj23@ymail.com', phone : 442323600},\n      {id : 3, name : 'Raj Kumar', email : 'rajkumar101@ymail.com', phone : 560250879},\n    ];\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AppBar>\n          <ToolBar>\n            <Tooltip title=\"Click to view the menu\">\n              <IconButton>\n                <MenuIcon />\n              </IconButton>\n            </Tooltip>\n            <Typography>\n              Cycle Shop\n            </Typography>\n            <div className=\"login\">\n              <Tooltip title=\"Login to your account\">\n                <Button>\n                  Login\n                </Button>\n              </Tooltip>\n            </div>\n          </ToolBar>\n        </AppBar>\n      </header>\n\n        <div className=\"calendar\">\n          <h3>All Scheduled Repairs</h3>\n          <div className=\"CalendarView\">\n            <Calendar localizer={localizer} \n              events={[\n                {\n                  'title': 'Dave\\'s Giant Talon 1 Repair',\n                  'allDay': false,\n                  'start': new Date(2021, 4, 15, 10, 0), \n                  'end': new Date(2021, 4, 15, 14, 0),\n                },\n                {\n                  'title': 'John\\'s Giant Trance Shock absorber Change',\n                  'allDay': false,\n                  'start': new Date(2021, 4, 3, 9, 0), \n                  'end': new Date(2021, 4, 3, 15, 0), \n                },\n                {\n                  'title': 'Lily\\'s Marin Eldridge Grade 1 Chain Repair',\n                  'allDay': false,\n                  'start': new Date(2021, 5, 12, 15, 0), \n                  'end': new Date(2021, 5, 12, 17, 0),\n                },\n                {\n                  'title': 'Julia\\'s Ibis Ripmo V2 XT Maintenance Check',\n                  'allDay': false,\n                  'start': new Date(2021, 5, 17, 9, 0), \n                  'end': new Date(2021, 5, 17, 17, 0),\n                },\n                {\n                  'title': 'June\\'s Trek Fuel EX 9.9 Tire Change',\n                  'allDay': false,\n                  'start': new Date(2021, 7, 22, 11, 0), \n                  'end': new Date(2021, 7, 22, 13, 0),\n                },\n\n              ]}\n              startAccessor=\"start\"\n              endAccessor=\"end\"\n            />\n          </div>\n        </div>\n\n        <div className=\"button\">\n          <Tooltip title=\"Schedule a repair to fix your bicycle\">\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\n              Schedule Repair\n            </Button>\n          </Tooltip>\n          <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Schedule a repair</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                To schedule your bicycle repair, please enter your details here.\n              </DialogContentText>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Name\"\n                type=\"name\"\n                fullWidth\n              />\n              <TextField \n                autoFocus\n                margin=\"dense\"\n                id=\"email\"\n                label=\"Email Address\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField \n                autoFocus\n                margin=\"dense\"\n                id=\"bicycle type\"\n                label=\"Bicycle Type\"\n                type=\"bicycle type\"\n                fullWidth\n              />\n              <TextField\n                id=\"date-time\"\n                label=\"Date-time\"\n                type=\"datetime-local\"\n                defaultValue=\"2021-05-04T10:30\"\n              />  \n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={handleClose} color=\"primary\">\n                Submit\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n\n      <div className=\"table\">\n        <h3>Current Inventory</h3>\n        <table {...getTableProps()} >\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th\n                    {...column.getHeaderProps(column.getSortByToggleProps())} \n                    style={{\n                      borderBottom: 'solid 3px black',\n                      background: 'aliceblue',\n                      color: 'black',\n                      fontWeight: 'bold',\n                    }}\n                  >\n                    {column.render('Header')}\n                    <span>\n                      {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map(row => {\n              prepareRow(row)\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td\n                        {...cell.getCellProps()}\n                        style={{\n                          padding: '10px',\n                          border: 'solid 1px gray',\n                          background: 'papayawhip',\n                          color: 'black',\n                        }}\n                      >\n                        {cell.render('Cell')}\n                      </td>\n                    )\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"customerInfoDiv\">\n        <h3> Our Customers</h3>\n        <div className=\"customerInfo\">\n          {customers.map(customers => (\n            <p>\n              <label>Customer Name: </label><b>{customers.name}</b><br />\n              <label>Email Address: </label>\n              <Tooltip title=\"Click to send an email\">\n                <a href={\"mailto:\" + customers.email}>{customers.email}</a>\n              </Tooltip><br />\n              <label>Phone Number: </label>\n              <Tooltip title=\"Click to call\">\n              <a href={\"tel:\" + customers.phone}>{customers.phone}</a>\n              </Tooltip><br />\n            </p>\n            \n            \n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}